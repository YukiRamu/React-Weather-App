{"version":3,"sources":["Components/Router/ScrollToTop.jsx","Context/WeatherContext.jsx","Components/Bookmark/AddBookmark.jsx","Components/Weather/Weather.jsx","Components/Search/Search.jsx","Components/Header/Header.jsx","Components/Footer/Footer.jsx","Components/Forecast/Forecast.jsx","Components/Bookmark/Bookmark.jsx","Components/App/App.jsx","reportWebVitals.js","index.jsx"],"names":["ScrollToTop","prevProps","this","props","location","window","scrollTo","children","Component","withRouter","WeatherContext","createContext","WeatherProvider","useState","setLocation","unit","setUnit","currentWeather","setCurrentWeather","oneCallWeatherInfo","setOneCallWeatherInfo","currentDate","setCurrentDate","error","setError","message","setMsg","IsLocationChanged","setIsLocationChanged","IsUnitChanged","setIsUnitChanged","calcDateNTime","fetchedData","dateObj","Date","selectedCity","getTime","getTimezoneOffset","timezone","timeInSelectedCity","toString","substr","useEffect","API_KEY","a","fetch","currentRes","ok","status","setTimeout","statusText","json","currentData","coord","lat","lon","oneCallRes","oneCallData","console","Provider","value","AddBookmark","useContext","className","onClick","localStorage","hasOwnProperty","bookmark","JSON","parse","getItem","some","elem","name","push","setItem","stringify","Weather","Row","Col","Math","round","main","temp","xs","sm","md","lg","xl","sys","country","unix","format","sunrise","sunset","src","weather","icon","alt","Carousel","controls","indicators","Item","hourly","map","index","dt","temp_max","feels_like","humidity","clouds","all","pressure","wind","speed","to","pathname","state","dailyForecast","daily","Search","history","useHistory","Form","onSubmit","e","preventDefault","target","action","slice","isNaN","Group","Control","type","placeholder","onChange","onFocus","Button","href","Header","uncheckedStyle","handleChange","checked","parentElement","attributes","previousSibling","nextSibling","Nav","style","Footer","rel","Forecast","day","max","min","wind_speed","Bookmark","dataForBookmark","setDataForBookmark","bookmarkMsg","setBookmarkMsg","locationArray","currentBookmark","i","unshift","length","reload","filtered","filter","nextElementSibling","childNodes","innerText","deleteLocation","handleClick","App","basename","process","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.00214081.chunk.js","sourcesContent":["import { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass ScrollToTop extends Component {\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.location !== prevProps.location) {\r\n      window.scrollTo(0, 0);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default withRouter(ScrollToTop);","import React, { useState, useEffect, createContext } from \"react\";\r\n\r\nconst WeatherContext = createContext();\r\n\r\nconst WeatherProvider = (props) => {\r\n\r\n  const [location, setLocation] = useState(\"Vancouver\");\r\n  const [unit, setUnit] = useState(\"metric\");\r\n  const [currentWeather, setCurrentWeather] = useState();\r\n  const [oneCallWeatherInfo, setOneCallWeatherInfo] = useState();\r\n  const [currentDate, setCurrentDate] = useState();\r\n\r\n  const [error, setError] = useState(\"\");\r\n  const [message, setMsg] = useState(\"\");\r\n  const [IsLocationChanged, setIsLocationChanged] = useState(true);\r\n  const [IsUnitChanged, setIsUnitChanged] = useState(false);\r\n\r\n  /* method to convert Unix timestamp to Date and Time */\r\n  const calcDateNTime = (fetchedData) => {\r\n    //get today's date\r\n    let dateObj = new Date();\r\n    let localTime = dateObj.getTime();\r\n    let localOffset = dateObj.getTimezoneOffset() * 60000;\r\n    let UTC = localTime + localOffset;\r\n    let selectedCity = UTC + (fetchedData.timezone * 1000);\r\n    let timeInSelectedCity = new Date(selectedCity);\r\n\r\n    setCurrentDate(timeInSelectedCity.toString().substr(0, 15));\r\n  };\r\n\r\n  /* fetch Vancouver weather */\r\n  useEffect(() => {\r\n    // const API_KEY = \"a11a837e1cf3fcb33bb6b696ba803ea9\"; blocked\r\n    const API_KEY = \"429736441cf3572838aa10530929f7cd\";\r\n    const ENDPOINT_CURRENT_WEATHER = \"https://api.openweathermap.org/data/2.5/weather?\";\r\n    const ENDPOINT_ONECALL = \"https://api.openweathermap.org/data/2.5/onecall?\";\r\n\r\n    (async () => {\r\n      try {\r\n        //fetch current data : location !== \"\" is to prevent fetch api being executed when the input field is cleared\r\n        if (((IsLocationChanged) && (location !== \"\")) || (IsUnitChanged)) {\r\n          const currentRes = await fetch(`${ENDPOINT_CURRENT_WEATHER}q=${location}&units=${unit}&appid=${API_KEY}`);\r\n\r\n          if (!currentRes.ok) {\r\n            if (currentRes.status === 404) {\r\n              setError(\"❌ Location not found\");\r\n              setTimeout(() => { setError(\"\"); }, 2000);\r\n              //clear location and set flag false\r\n              setLocation(\"\");\r\n              setIsLocationChanged(false);\r\n            }\r\n            throw currentRes.statusText;\r\n          } else {\r\n            const currentData = await currentRes.json();\r\n            setCurrentWeather(currentData);\r\n\r\n            //get current date and time\r\n            calcDateNTime(currentData);\r\n\r\n            try {\r\n              //fetch all weather data (for forecast)\r\n              const oneCallRes = await fetch(`${ENDPOINT_ONECALL}lat=${currentData.coord.lat}&lon=${currentData.coord.lon}&units=${unit}&appid=${API_KEY}`);\r\n              if (!oneCallRes.ok) {\r\n                throw oneCallRes.statusText;\r\n              } else {\r\n                const oneCallData = await oneCallRes.json();\r\n                setOneCallWeatherInfo(oneCallData);\r\n\r\n                //changet flags \r\n                setIsLocationChanged(false); //prevent re-rendering while inputting location\r\n                setIsUnitChanged(false); //back to default\r\n              }\r\n            } catch (error) {\r\n              console.error(`Error = ${error} : Failed to fetch forefast`);\r\n              return error;\r\n            }\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error(`Error = ${error} : Failed to fetch current weather`);\r\n        return error;\r\n      }\r\n    })();\r\n  }, [location, IsLocationChanged, unit, IsUnitChanged]);\r\n\r\n  return (\r\n    <>\r\n      <WeatherContext.Provider value={{\r\n        currentWeather,\r\n        setCurrentWeather,\r\n        oneCallWeatherInfo,\r\n        currentDate,\r\n        error,\r\n        setError,\r\n        location,\r\n        setLocation,\r\n        IsLocationChanged,\r\n        setIsLocationChanged,\r\n        unit,\r\n        setUnit,\r\n        IsUnitChanged,\r\n        setIsUnitChanged,\r\n        message,\r\n        setMsg\r\n      }}>\r\n        {props.children}\r\n      </WeatherContext.Provider>\r\n    </>\r\n  );\r\n};\r\n\r\nexport { WeatherProvider as default, WeatherContext };\r\n","import React, { useContext } from 'react';\r\nimport { WeatherContext } from \"../../Context/WeatherContext\";\r\nimport { FaHeart } from \"react-icons/fa\";\r\nimport \"./AddBookmark.css\";\r\n\r\nconst AddBookmark = () => {\r\n  const { currentWeather, message, setMsg } = useContext(WeatherContext);\r\n\r\n  const addBookmark = () => {\r\n    \r\n    //check if there is already bookmark\r\n    if (!localStorage.hasOwnProperty(\"bookmark\")) {\r\n      //first time adding bookmark\r\n      localStorage.setItem(\"bookmark\", JSON.stringify([currentWeather.name]));\r\n      setMsg(`✔️  ${currentWeather.name} is added to your location list`);\r\n      setTimeout(() => { setMsg(\"\"); }, 2500);\r\n    } else {\r\n      //already there - check duplicate\r\n      let bookmark = JSON.parse(localStorage.getItem(\"bookmark\"));\r\n      if (bookmark.some(elem => elem === currentWeather.name)) {\r\n        setMsg(`❌ ${currentWeather.name} is already in your location list`);\r\n        setTimeout(() => { setMsg(\"\"); }, 2500);\r\n      } else {\r\n        bookmark.push(currentWeather.name);\r\n        localStorage.setItem(\"bookmark\", JSON.stringify(bookmark));\r\n        setMsg(`✔️  ${currentWeather.name} is added to your location list`);\r\n        setTimeout(() => { setMsg(\"\"); }, 2500);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <button className=\"bookmarkBtn\" onClick={addBookmark}><FaHeart></FaHeart> Add to your location</button>\r\n      {/* Message for bookmark feature */}\r\n      {(message !== \"\") ? (\r\n        <>\r\n          <p className=\"message\">{message}</p>\r\n        </>\r\n      ) : \"\"}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddBookmark;","import React, { useContext } from 'react';\r\nimport { Carousel, Row, Col } from 'react-bootstrap';\r\nimport { FaTint, FaRegCompass } from \"react-icons/fa\";\r\nimport { GiPaperWindmill, GiRaining, GiSunrise, GiSunset, GiTargetArrows } from \"react-icons/gi\";\r\nimport { WeatherContext } from \"../../Context/WeatherContext\";\r\nimport { Link } from 'react-router-dom';\r\nimport \"./Weather.css\";\r\nimport Moment from 'react-moment';\r\nimport 'moment-timezone';\r\nimport AddBookmark from \"../Bookmark/AddBookmark\";\r\n\r\nconst Weather = () => {\r\n  const { currentWeather, oneCallWeatherInfo, currentDate } = useContext(WeatherContext);\r\n\r\n  return (\r\n    <>\r\n      {(currentWeather && oneCallWeatherInfo && currentDate) ? (\r\n        <>\r\n          <div className=\"weatherContainer\">\r\n            <Row>\r\n              {/* Weather Row Left */}\r\n              <Col className=\"left col-8\">\r\n                {/* Current weather */}\r\n                <Row className=\"currentRow\">\r\n                  <Col className=\"temperature\">\r\n                    <p className=\"temp\">{Math.round([currentWeather.main.temp])} °</p>\r\n                  </Col>\r\n                  <Col className=\"city\" xs=\"auto\" sm=\"auto\" md=\"auto\" lg=\"auto\" xl=\"auto\">\r\n                    <h2>{currentWeather.name}, {currentWeather.sys.country}</h2>\r\n                    <p>{currentDate}</p>\r\n                    <div className=\"sun\">\r\n                      <p><GiSunrise></GiSunrise> <Moment unix format=\"LT\">{currentWeather.sys.sunrise}</Moment></p>\r\n                      <p><GiSunset></GiSunset> <Moment unix format=\"LT\">{currentWeather.sys.sunset}</Moment></p>\r\n                    </div>\r\n                  </Col>\r\n                  <Col className=\"icon\">\r\n                    <img src={`https://openweathermap.org/img/wn/${currentWeather.weather[0].icon}@2x.png`} alt=\"icon\"></img>\r\n                    <p>{currentWeather.weather[0].main}</p>\r\n                  </Col>\r\n                </Row>\r\n                {/* Hourly */}\r\n                <Row className=\"hourlyRow\">\r\n                  <Carousel\r\n                    controls={false}\r\n                    indicators={false}>\r\n                    <Carousel.Item>\r\n                      {oneCallWeatherInfo.hourly.map((elem, index) => (\r\n                        <Col className=\"hourlyPanel\" key={elem[index]}>\r\n                          <Moment unix format=\"MMM DD\" className=\"date\">{elem.dt}</Moment>\r\n                          <Moment unix format=\"LT\">{elem.dt}</Moment>\r\n                          <img src={`https://openweathermap.org/img/wn/${elem.weather[0].icon}.png`} alt=\"icon\" />\r\n                          <p>{Math.round([elem.temp])} °</p>\r\n                        </Col>\r\n                      ))}\r\n                    </Carousel.Item>\r\n                  </Carousel>\r\n                </Row>\r\n              </Col>\r\n\r\n              {/* Bookmark Button */}\r\n              <AddBookmark></AddBookmark>\r\n\r\n              {/* Weather Detail Right */}\r\n              <Col className=\"right col-4\">\r\n                <Row className=\"detailRow\">\r\n                  <h3>Weather Details</h3>\r\n                  <div>\r\n                    <p>H : {Math.round([currentWeather.main.temp_max])} ° |</p>\r\n                    <p>L : {Math.round([currentWeather.main.temp_max])} ° |</p>\r\n                    <p className=\"feelLike\">Feels like: {Math.round([currentWeather.main.feels_like])}°</p>\r\n                  </div>\r\n                  <p><GiRaining></GiRaining> {currentWeather.main.humidity} %</p>\r\n                  <p><FaTint></FaTint> {currentWeather.clouds.all} %</p>\r\n                  <p><FaRegCompass></FaRegCompass> {currentWeather.main.pressure} hPa</p>\r\n                  <p><GiPaperWindmill></GiPaperWindmill> {currentWeather.wind.speed} m/s</p>\r\n                  <Link\r\n                    to={{\r\n                      pathname: \"/forecast\",\r\n                      state: {\r\n                        dailyForecast: oneCallWeatherInfo.daily\r\n                      }\r\n                    }}\r\n                    className=\"forecastLink \"><GiTargetArrows></GiTargetArrows> 7 Day Forecast</Link>\r\n                </Row>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n        </>\r\n      ) : (<h1 className=\"loading\">Loading...Hang on a sec...</h1>)}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Weather;\r\n","import React, { useContext } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { FaSearch } from \"react-icons/fa\";\r\nimport { GiHelp } from \"react-icons/gi\";\r\nimport { WeatherContext } from \"../../Context/WeatherContext\";\r\nimport \"./Search.css\";\r\n\r\nconst Search = () => {\r\n\r\n  const { error, setError, location, setLocation, setIsLocationChanged } = useContext(WeatherContext);\r\n  let history = useHistory();\r\n\r\n  const SearchCity = (e) => {\r\n    e.preventDefault();\r\n\r\n    //if searched on bookmark page --> redirect to homepage\r\n    if (e.target.action.slice(-8) === \"bookmark\") {\r\n      history.push(\"/home\");\r\n    }\r\n\r\n    // validation check\r\n    if ((location === \"\") || (!isNaN(location))) {\r\n      setError(\"❌ Please enter valid location\");\r\n      setTimeout(() => { setError(\"\"); }, 2000);\r\n    }\r\n    else {\r\n      setLocation(location);\r\n      setIsLocationChanged(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* Form for current weather */}\r\n      <Form className=\"col-4 searchForm\" onSubmit={SearchCity}>\r\n        <Form.Group>\r\n          <Form.Control type=\"text\" placeholder=\"Enter location\"\r\n            onChange={e => setLocation(e.target.value)}\r\n            value={location}\r\n            onFocus={() => { setLocation(\"\"); }} />\r\n        </Form.Group>\r\n        <Button type=\"submit\" className=\"searchBtn\">\r\n          <FaSearch></FaSearch>\r\n        </Button>\r\n      </Form>\r\n      {(error !== \"\") ? (\r\n        <>\r\n          <p className=\"errorMsg\">{error}</p>\r\n        </>\r\n      ) : \"\"}\r\n      <a href=\"https://www.nationsonline.org/oneworld/country_code_list.htm\" target=\"_black\" className=\"helpLink\"><GiHelp></GiHelp> Location Search Help</a>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import { React, useContext } from 'react';\r\nimport \"./Header.css\";\r\nimport { Row, Nav } from 'react-bootstrap';\r\nimport Search from \"../Search/Search\";\r\nimport { TiWeatherSnow } from \"react-icons/ti\";\r\nimport { GiPineTree } from \"react-icons/gi\";\r\nimport { FaHeart } from \"react-icons/fa\";\r\nimport { Link } from 'react-router-dom';\r\nimport { WeatherContext } from '../../Context/WeatherContext';\r\n\r\nconst Header = () => {\r\n\r\n  const { unit, setUnit, setIsUnitChanged } = useContext(WeatherContext);\r\n\r\n  const defaultStyleMetric = {\r\n    \"border\": \"0.1rem solid #d66c05\",\r\n    \"backgroundColor\": \"#d66c05\"\r\n  };\r\n\r\n  const defaultStyleFahrenheit = {\r\n    \"border\": \"0.1rem solid white\",\r\n    \"backgroundColor\": \"transparent\"\r\n  };\r\n\r\n  const checkedStyle = \"background-color: #d66c05; border: 0.1rem solid #d66c05\";\r\n\r\n  const uncheckedStyle = \"background-color: transparent; border: 0.1rem solid white\";\r\n\r\n  const handleChange = (e) => {\r\n    setUnit(e.target.value);\r\n    setIsUnitChanged(true);\r\n\r\n    if (e.target.checked === true) {\r\n      e.target.parentElement.attributes[1].value = checkedStyle;\r\n      if (e.target.value === \"imperial\") {\r\n        e.target.parentElement.previousSibling.attributes[1].value = uncheckedStyle;\r\n      } else {\r\n        e.target.parentElement.nextSibling.attributes[1].value = uncheckedStyle;\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {unit ? (\r\n        <Row className=\"header\" >\r\n          <Nav className=\"col-8 title\">\r\n            <Link to=\"/home\">\r\n              <TiWeatherSnow></TiWeatherSnow> Weather Report\r\n            </Link>\r\n            <div className=\"unit\">\r\n              <label className=\"unitBtn celcius\" style={defaultStyleMetric}>\r\n                <input\r\n                  type=\"radio\"\r\n                  value=\"metric\"\r\n                  onChange={handleChange}\r\n                  checked={unit === \"metric\"} />\r\n                Celcius\r\n              </label>\r\n\r\n              <label className=\"unitBtn metric\" style={defaultStyleFahrenheit}>\r\n                <input\r\n                  type=\"radio\"\r\n                  value=\"imperial\"\r\n                  onChange={handleChange}\r\n                  checked={unit === \"imperial\"} />\r\n                Fahrenheit\r\n              </label>\r\n            </div>\r\n            <Link to=\"/bookmark\" className=\"link\">\r\n              <FaHeart></FaHeart> Your Location\r\n            </Link>\r\n            <Link to=\"/home\" className=\"link\">\r\n              <GiPineTree></GiPineTree> Current weather\r\n            </Link>\r\n            <Link to=\"/forecast\" className=\"link\">\r\n              <GiPineTree></GiPineTree> 7 Day Forecast\r\n            </Link>\r\n          </Nav>\r\n          <Search />\r\n        </Row>\r\n      ) : (\r\n        <h1 className=\"loading\">Loading...Hang on a sec...</h1>\r\n      )}\r\n\r\n    </>\r\n  );\r\n};\r\nexport default Header;","import React from 'react';\r\nimport \"./Footer.css\";\r\nimport { FaLinkedin, FaGithub } from \"react-icons/fa\";\r\n\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <>\r\n      <footer>\r\n        <h5>@Yuki Matsubara all right reserved. 2021/06.\r\n          <a href=\"https://www.linkedin.com/in/yukimatsubara/\" target=\"_blank\" rel=\"noreferrer\"><FaLinkedin></FaLinkedin></a>\r\n          <a href=\"https://github.com/YukiRamu\" target=\"_blank\" rel=\"noreferrer\"><FaGithub></FaGithub></a>\r\n        </h5>\r\n      </footer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useContext } from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { FaTint, FaRegCompass, FaThermometerHalf } from \"react-icons/fa\";\r\nimport { GiPaperWindmill, GiRaining, GiSunrise, GiSunset } from \"react-icons/gi\";\r\nimport { WeatherContext } from \"../../Context/WeatherContext\";\r\nimport \"./Forecast.css\";\r\nimport Moment from 'react-moment';\r\nimport 'moment-timezone';\r\nimport AddBookmark from \"../Bookmark/AddBookmark\";\r\n\r\nconst Forecast = () => {\r\n  const { currentWeather, oneCallWeatherInfo } = useContext(WeatherContext);\r\n\r\n  return (\r\n    <>\r\n      {(currentWeather && oneCallWeatherInfo) ? (\r\n        <>\r\n          <div className=\"forecastContainer\">\r\n            <h2>{currentWeather.name}, {currentWeather.sys.country}</h2>\r\n            <Row>\r\n              {oneCallWeatherInfo.daily.map((elem, index) => (\r\n                <Col key={elem[index]}>\r\n                  <h3><Moment unix format=\"MMM DD\">{elem.dt}</Moment></h3>\r\n                  <h4><Moment unix format=\"ddd\">{elem.dt}</Moment></h4>\r\n                  <img src={`https://openweathermap.org/img/wn/${elem.weather[0].icon}@2x.png`} alt=\"icon\"></img>\r\n                  <p className=\"feelLike\"><FaThermometerHalf></FaThermometerHalf> {Math.round([elem.feels_like.day])}°</p>\r\n                  <div className=\"temperature\">\r\n                    <p className=\"max\">H : {Math.round([elem.temp.max])} °</p>\r\n                    <p className=\"min\"> L : {Math.round([elem.temp.min])} °</p>\r\n                  </div>\r\n                  <div className=\"sun\">\r\n                    <p><GiSunrise></GiSunrise> <Moment unix format=\"LT\">{elem.sunrise}</Moment></p>\r\n                    <p><GiSunset></GiSunset> <Moment unix format=\"LT\">{elem.sunset}</Moment></p>\r\n                  </div>\r\n                  <div className=\"humidity\">\r\n                    <p><GiRaining></GiRaining> {elem.humidity} %</p>\r\n                    <p><FaTint></FaTint> {elem.clouds} %</p>\r\n                  </div>\r\n                  <div className=\"pressure\">\r\n                    <p><FaRegCompass></FaRegCompass> {elem.pressure} hPa</p>\r\n                    <p><GiPaperWindmill></GiPaperWindmill> {elem.wind_speed} m/s</p>\r\n                  </div>\r\n                </Col>\r\n              ))}\r\n            </Row>\r\n          </div>\r\n          {/* Bookmark Button */}\r\n          <AddBookmark className=\"msg\"></AddBookmark>\r\n        </>\r\n      ) : (<h1 className=\"loading\">Loading...Hang on a sec...</h1>)}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Forecast;\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport { WeatherContext } from \"../../Context/WeatherContext\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Row, Button } from 'react-bootstrap';\r\nimport \"./Bookmark.css\";\r\n\r\nconst Bookmark = (props) => {\r\n\r\n  const { unit, setLocation, setIsLocationChanged, message, setMsg } = useContext(WeatherContext);\r\n  let history = useHistory();\r\n\r\n  //private state hook\r\n  const [dataForBookmark, setDataForBookmark] = useState([]);\r\n  const [bookmarkMsg, setBookmarkMsg] = useState(\"\");\r\n\r\n  //Button click handler\r\n  const handleClick = (elem) => {\r\n    setLocation(elem.name);\r\n    setIsLocationChanged(true);\r\n    history.push(\"/home\"); //redirect\r\n  };\r\n\r\n  const deleteLocation = (e) => {\r\n    let bookmark = JSON.parse(localStorage.getItem(\"bookmark\"));\r\n    let filtered = bookmark.filter(elem => elem !== e.target.nextElementSibling.childNodes[0].innerText);\r\n    localStorage.setItem(\"bookmark\", JSON.stringify(filtered));\r\n    setMsg(`✔️  ${e.target.nextElementSibling.childNodes[0].innerText} is successfully deleted from your location list`);\r\n    setTimeout(() => { setMsg(\"\"); }, 2500);\r\n    //force reload to render the component\r\n    if (window.name != \"any\") {\r\n      window.location.reload();\r\n      window.name = \"any\";\r\n    } else {\r\n      window.name = \"\";\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const API_KEY = \"429736441cf3572838aa10530929f7cd\";\r\n    const ENDPOINT_CURRENT_WEATHER = \"https://api.openweathermap.org/data/2.5/weather?\";\r\n    let locationArray = [];\r\n\r\n    //get bookmark when location is already added\r\n    if (localStorage.hasOwnProperty(\"bookmark\")) {\r\n      let currentBookmark = JSON.parse(localStorage.getItem(\"bookmark\"));\r\n      //get current data for all location in bookmark list\r\n      for (let i = 0; i < currentBookmark.length; i++) {\r\n        (async () => {\r\n          try {\r\n            const currentRes = await fetch(`${ENDPOINT_CURRENT_WEATHER}q=${currentBookmark[i]}&units=${unit}&appid=${API_KEY}`);\r\n            if (!currentRes.ok) {\r\n              throw currentRes.statusText;\r\n            } else {\r\n              const currentData = await currentRes.json();\r\n              locationArray.unshift(currentData);\r\n            }\r\n            setDataForBookmark(locationArray);\r\n          } catch (error) {\r\n            console.error(`Error = ${error} : Failed to fetch current weather`);\r\n            return error;\r\n          }\r\n        })();\r\n      }\r\n      //force reload to render the component\r\n      if (window.name != \"any\") {\r\n        window.location.reload();\r\n        window.name = \"any\";\r\n      } else {\r\n        window.name = \"\";\r\n      }\r\n    } else {\r\n      setBookmarkMsg(\"No location added yet\");\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {dataForBookmark ? (\r\n        <>\r\n          <div className=\"bookmarkContainer\">\r\n            <h2>Your Location</h2>\r\n            <Row className=\"row-cols-lg-4\">\r\n              {dataForBookmark.map(((elem, index) => (\r\n                <>\r\n                  <div key={elem} className=\"col\" >\r\n                    <button className=\"delBtn\" onClick={(e) => { deleteLocation(e); }}>x</button>\r\n                    <Button className=\"locationPanel col\" onClick={() => { handleClick(elem); }}>\r\n                      <div className=\"cityName\">\r\n                        <h3>{elem.name}</h3>\r\n                      </div>\r\n                      <div className=\"detail\">\r\n                        <p className=\"temp\">{Math.round([elem.main.temp])} °</p>\r\n                        <img src={`https://openweathermap.org/img/wn/${elem.weather[0].icon}@2x.png`} alt=\"icon\"></img>\r\n                        <div>\r\n                          <p className=\"feelLike\">Feels like: {Math.round([elem.main.feels_like])}°</p>\r\n                          <p>H : {Math.round([elem.main.temp_max])} ° | L : {Math.round([elem.main.temp_max])} °</p>\r\n                        </div>\r\n                      </div>\r\n                    </Button>\r\n                  </div>\r\n                </>\r\n              )))}\r\n            </Row>\r\n          </div>\r\n        </>\r\n      ) : (<h1 className=\"loading\">Loading...Hang on a sec...</h1>)}\r\n      {bookmarkMsg ? (\r\n        <h1 className=\"loading\">{bookmarkMsg}</h1>\r\n      ) : \"\"}\r\n      {/* Message for bookmark feature */}\r\n      {(message !== \"\") ? (\r\n        <>\r\n          <p className=\"message\">{message}</p>\r\n        </>\r\n      ) : \"\"}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Bookmark;\r\n","import React from \"react\";\r\nimport {\r\n  BrowserRouter,\r\n  Switch,\r\n  Route\r\n} from 'react-router-dom';\r\nimport './App.css';\r\nimport ScrollToTop from \"../Router/ScrollToTop\";\r\nimport Weather from \"../Weather/Weather\";\r\nimport Header from \"../Header/Header\";\r\nimport Footer from \"../Footer/Footer\";\r\nimport Forecast from \"../Forecast/Forecast\";\r\nimport Bookmark from \"../Bookmark/Bookmark\";\r\nimport WeatherProvider from \"../../Context/WeatherContext\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <WeatherProvider>\r\n        {/* React Router*/}\r\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n          {/* Scroll to Top */}\r\n          <ScrollToTop>\r\n            {/* Header */}\r\n            <Header />\r\n            {/* Router Switch */}\r\n            <Switch>\r\n              <Route exact path=\"/\" component={Weather} />\r\n              <Route exact path=\"/home\" component={Weather} />\r\n              <Route exact path=\"/forecast\" component={Forecast} />\r\n              <Route exact path=\"/bookmark\" component={Bookmark} />\r\n            </Switch>\r\n            {/* Footer */}\r\n            <Footer />\r\n          </ScrollToTop>\r\n        </BrowserRouter>\r\n      </WeatherProvider>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App/App';\nimport reportWebVitals from './reportWebVitals';\nimport WeatherProvider from \"./Context/WeatherContext\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}